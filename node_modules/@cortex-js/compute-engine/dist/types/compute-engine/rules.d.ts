/* 0.12.3 */import { BoxedExpression, IComputeEngine, Rule, BoxedRuleSet, ReplaceOptions, BoxedSubstitution } from './public';
/**
 * Go through all the rules in the rule set, and for all the rules that match
 * return the rhs of the rule applied to `expr`.
 * @param rules
 */
export declare function matchRules(expr: BoxedExpression, rules: BoxedRuleSet, sub: BoxedSubstitution): BoxedExpression[];
export declare function boxRules(ce: IComputeEngine, rs: Iterable<Rule>): BoxedRuleSet;
/**
 * Apply the rules in the ruleset and return a modified expression.
 *
 * If no rule applied, return `null`.
 */
export declare function replace(expr: BoxedExpression, ruleSet: BoxedRuleSet, options?: ReplaceOptions): BoxedExpression | null;
/**
 * Substitute some symbols with an expression.
 *
 * This is applied recursively to all subexpressions.
 *
 * While `replace()` applies a rule which may include expressions in
 * its `lhs` to an expression, `substitute` is a specialized version
 * that only apply rules that have a `lhs` made of a symbol.
 */
export declare function getWildcardName(s: string): string;
