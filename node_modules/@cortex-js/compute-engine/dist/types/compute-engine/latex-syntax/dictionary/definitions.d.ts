/* 0.12.3 */import { LatexDictionary, LatexString, LatexToken, SerializeHandler, LatexDictionaryEntry, LibraryCategory, Delimiter, PostfixParseHandler, MatchfixParseHandler, InfixParseHandler, PrefixParseHandler, EnvironmentParseHandler, SymbolParseHandler, FunctionParseHandler } from '../public';
import { WarningSignal } from '../../../common/signals';
export type CommonEntry = {
    name?: string;
    serialize: SerializeHandler | LatexString;
};
export type SymbolEntry = CommonEntry & {
    kind: 'symbol';
    precedence: number;
    parse: SymbolParseHandler;
};
export type FunctionEntry = CommonEntry & {
    kind: 'function';
    parse: FunctionParseHandler;
};
export type MatchfixEntry = CommonEntry & {
    kind: 'matchfix';
    openDelimiter: Delimiter | LatexToken[];
    closeDelimiter: Delimiter | LatexToken[];
    parse: MatchfixParseHandler;
};
export type InfixEntry = CommonEntry & {
    kind: 'infix';
    associativity: 'right' | 'left' | 'non' | 'both';
    precedence: number;
    parse: InfixParseHandler;
};
export type PrefixEntry = CommonEntry & {
    kind: 'prefix';
    precedence: number;
    parse: PrefixParseHandler;
};
export type PostfixEntry = CommonEntry & {
    kind: 'postfix';
    precedence: number;
    parse: PostfixParseHandler;
};
export type EnvironmentEntry = CommonEntry & {
    kind: 'environment';
    parse: EnvironmentParseHandler;
};
export type IndexedLatexDictionaryEntry = FunctionEntry | SymbolEntry | MatchfixEntry | InfixEntry | PrefixEntry | PostfixEntry | EnvironmentEntry;
export type IndexedLatexDictionary = {
    lookahead: number;
    name: Map<string, IndexedLatexDictionaryEntry>;
    function: Map<string, FunctionEntry[]>;
    symbol: (Map<LatexString, SymbolEntry[]> | null)[];
    prefix: (Map<LatexString, PrefixEntry[]> | null)[];
    infix: (Map<LatexString, InfixEntry[]> | null)[];
    postfix: (Map<LatexString, PostfixEntry[]> | null)[];
    matchfix: MatchfixEntry[];
    environment: Map<string, EnvironmentEntry>;
};
export declare function indexLatexDictionary(dic: readonly LatexDictionaryEntry[], onError: (sig: WarningSignal) => void): IndexedLatexDictionary;
export declare const DEFAULT_LATEX_DICTIONARY: {
    [category in LibraryCategory]?: LatexDictionary;
};
