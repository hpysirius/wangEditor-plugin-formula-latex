/* 0.12.3 */import { Complex } from 'complex.js';
import { Decimal } from 'decimal.js';
import { BoxedExpression, Rational } from './public';
/** Quickly determine the numeric domain of a number or constant
 * For the symbols, this is a hard-coded optimization that doesn't rely on the
 * dictionaries. The regular path is in `internalDomain()`
 */
export declare function inferNumericDomain(value: number | Decimal | Complex | Rational): string;
/**
 * Simple description of a numeric domain as a base domain, a min and
 * max value, possibly open ends, and some excluded values.
 */
export type NumericDomainInfo = {
    domain?: string;
    min?: number;
    max?: number;
    open?: 'left' | 'right' | 'both';
    /** Values from _excludedValues_ are considered not in this domain */
    excludedValues?: number[];
    /** If defined, the values in this domain must follow the relation
     * _period_ * _n_ + _phase_ when _n_ is in _domain_.
     */
    multiple?: [period: number, domain: BoxedExpression, phase: number];
};
